<?xml version="1.0" encoding="UTF-8"?>
<project name="auction" default="compile" basedir=".">

    <property name="src.dir" value="src"/>
    <property name="src.test" value="src"/>
    <property name="build.dir" value="build"/>
    <property name="reports.dir" value="reports"/>

    <!-- You need to update these properties!-->
    <property name="server.name" value="server.ServerStart"/><!-- Server's full class name (including the package) -->
    <property name="server.host" value="127.0.0.1"/><!-- Server's host -->
    <property name="client.name" value="Client.MainClient"/><!-- Client's full class name (including the package) -->
    <property name="server.port" value="12345"/><!-- Server's TCP port -->
    <property name="client1.port" value="20001"/><!-- 1st Client's UDP port -->
    <property name="client2.port" value="20002"/><!-- 2nd Client's UDP port -->
    <property name="client3.port" value="20003"/><!-- 3rd Client's UDP port -->
    <property name="client4.port" value="20004"/><!-- 4th Client's UDP port -->
    <property name="client5.port" value="20005"/><!-- 5th Client's UDP port -->
    <property name="client6.port" value="20006"/><!-- 6th Client's UDP port -->

    <path id="project.classpath">
        <pathelement location="${build.dir}"/>
        <pathelement location="lib/hamcrest-core-1.3.jar"/>
        <pathelement location="lib/junit-4.11.jar"/>
    </path>

    <target name="compile" description="Compile project.">
        <mkdir dir="${build.dir}"/>
        <javac srcdir="${src.dir}" destdir="${build.dir}" classpathref="project.classpath" debug="true" deprecation="true" includeantruntime="false"/>
        <copy todir="${build.dir}">
            <fileset dir="${src.dir}">
                <include name="*.properties"/>
            </fileset>
        </copy>
    </target>

    <target name="run-server" depends="compile" description="Run Server.">
        <java classname="${server.name}" fork="true" classpathref="project.classpath">
            <arg value="${server.port}"/>
        </java>
    </target>

    <target name="run-client1" depends="compile" description="Run 1st Client.">
        <java classname="${client.name}" fork="false" classpathref="project.classpath">
            <arg value="${server.host}"/>
            <arg value="${server.port}"/>
            <arg value="${client1.port}"/>
        </java>
    </target>

    <target name="run-client2" depends="compile" description="Run 2nd Client.">
        <java classname="${client.name}" fork="false" classpathref="project.classpath">
            <arg value="${server.host}"/>
            <arg value="${server.port}"/>
            <arg value="${client2.port}"/>
        </java>
    </target>

    <target name="run-client3" depends="compile" description="Run 3rd Client.">
        <java classname="${client.name}" fork="false" classpathref="project.classpath">
            <arg value="${server.host}"/>
            <arg value="${server.port}"/>
            <arg value="${client3.port}"/>
        </java>
    </target>

    <target name="run-client4" depends="compile" description="Run 4th Client.">
        <java classname="${client.name}" fork="false" classpathref="project.classpath">
            <arg value="${server.host}"/>
            <arg value="${server.port}"/>
            <arg value="${client4.port}"/>
        </java>
    </target>

    <target name="run-client5" depends="compile" description="Run 5th Client.">
        <java classname="${client.name}" fork="false" classpathref="project.classpath">
            <arg value="${server.host}"/>
            <arg value="${server.port}"/>
            <arg value="${client5.port}"/>
        </java>
    </target>

    <target name="run-client6" depends="compile" description="Run 6th Client.">
        <java classname="${client.name}" fork="false" classpathref="project.classpath">
            <arg value="${server.host}"/>
            <arg value="${server.port}"/>
            <arg value="${client6.port}"/>
        </java>
    </target>
    
    <target name="test">
        <mkdir dir="${reports.dir}"/>

        <junit haltonfailure="yes" includeantruntime="true" logfailedtests="true" showoutput="true" printsummary="true">
            <classpath refid="project.classpath" />
            
            <formatter type="plain"/>
            <formatter type="xml"/>
        
            <batchtest fork="false" todir="${reports.dir}">
                <fileset dir="${src.test}">
                    <include name="**/*Test*.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>

    <target name="clean" description="Clean project.">
        <delete dir="${build.dir}"/>
        <delete dir="${reports.dir}"/>
    </target>

    <target name="rebuild" depends="clean, compile" description="Clean and build prject."/>
	<target name="jar" description="Create new jar"> 
	<jar destfile="lib/client.jar" basedir="${build.dir}"> 
		<manifest> <attribute name="Main-Class" value="Client.MainClient"/> 
	</manifest> </jar> 
	</target>
</project>
