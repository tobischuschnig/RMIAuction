<?xml version="1.0" encoding="UTF-8"?>
<project name="auction" default="compile" basedir=".">

    <property name="src.dir" value="src"/>
    <property name="src.test" value="src"/>
    <property name="build.dir" value="build"/>
    <property name="reports.dir" value="reports"/>

    <!-- You need to update these properties!-->
    <property name="server.name" value="server.ServerStart"/><!-- Server's full class name (including the package) -->
    <property name="server.host" value="127.0.0.1"/><!-- Server's host -->
    <property name="client.name" value="client.MainClient"/><!-- Client's full class name (including the package) -->
    <property name="server.port" value="5001"/><!-- Server's TCP port -->

    <property name="billingserver.name" value="billingServer.BillingServer"/>
    <property name="analyticsserver.name" value="analyticserver.AnalyticServerMain"/>

    <property name="analytics.bindingName" value="AnalyticServer"/><!-- RMI Binding Name of the Analytics Server -->
    <property name="billing.bindingName" value="BillingServer"/><!-- RMI Binding Name of the Billing Server -->

    <property name="client1.port" value="20001"/><!-- 1st Client's UDP port -->
    <property name="client2.port" value="20002"/><!-- 2nd Client's UDP port -->
    <property name="client3.port" value="20003"/><!-- 3rd Client's UDP port -->

    <property name="mgmtclient.name" value="managmentclient.StartManagementClient"/><!-- Management Client's full class name (including the package) -->

    <path id="project.classpath">
        <pathelement location="${build.dir}"/>
        <pathelement location="lib/hamcrest-core-1.3.jar"/>
        <pathelement location="lib/junit-4.11.jar"/>
        <pathelement location="lib/log4j-1.2.17.jar"/>
    </path>

    <target name="compile" description="Compile project.">
        <mkdir dir="${build.dir}"/>
        <javac srcdir="${src.dir}" destdir="${build.dir}" classpathref="project.classpath" debug="true" deprecation="true" includeantruntime="false"/>
        <copy todir="${build.dir}">
            <fileset dir="${src.dir}">
                <include name="*.properties"/>
            </fileset>
        </copy>
    </target>

    <target name="run-server" depends="compile" description="Run Server.">
        <java classname="${server.name}" fork="true" classpathref="project.classpath">
            <arg value="${server.port}"/>
        </java>
    </target>

    <target name="run-analytics-server" depends="compile" description="Run Analytics Server.">
        <java classname="${analytics.name}" fork="true" classpathref="project.classpath">
            <arg value="${analytics.bindingName}"/>
        </java>
    </target>

    <target name="run-billing-server" depends="compile" description="Run Billing Server.">
        <java classname="${billing.name}" fork="true" classpathref="project.classpath">
            <arg value="${billing.bindingName}"/>
        </java>
    </target>

    <target name="run-client1" depends="compile" description="Run 1st Client.">
        <java classname="${client.name}" fork="true" classpathref="project.classpath">
            <arg value="${server.host}"/>
            <arg value="${server.port}"/>
            <arg value="${client1.port}"/>
        </java>
    </target>

    <target name="run-client2" depends="compile" description="Run 2nd Client.">
        <java classname="${client.name}" fork="true" classpathref="project.classpath">
            <arg value="${server.host}"/>
            <arg value="${server.port}"/>
            <arg value="${client2.port}"/>
        </java>
    </target>

    <target name="run-client3" depends="compile" description="Run 3rd Client.">
        <java classname="${client.name}" fork="true" classpathref="project.classpath">
            <arg value="${server.host}"/>
            <arg value="${server.port}"/>
            <arg value="${client3.port}"/>
        </java>
    </target>

    <target name="run-mgmtclient1" depends="compile" description="Run Management Client 1.">
        <java classname="${mgmtclient.name}" fork="true" classpathref="project.classpath">
            <arg value="${analytics.bindingName}"/>
            <arg value="${billing.bindingName}"/>
        </java>
    </target>

    <target name="run-mgmtclient2" depends="compile" description="Run Management Client 2.">
        <java classname="${mgmtclient.name}" fork="true" classpathref="project.classpath">
            <arg value="${analytics.bindingName}"/>
            <arg value="${billing.bindingName}"/>
        </java>
    </target>

    <target name="run-mgmtclient3" depends="compile" description="Run Management Client 3.">
        <java classname="${mgmtclient.name}" fork="true" classpathref="project.classpath">
            <arg value="${analytics.bindingName}"/>
            <arg value="${billing.bindingName}"/>
        </java>
    </target>

    <target name="run-loadtest" depends="compile" description="Run Load Test.">
        <java classname="${client.name}" fork="true" classpathref="project.classpath">
            <arg value="${server.host}"/>
            <arg value="${server.port}"/>
            <arg value="${analytics.bindingName}"/>
        </java>
    </target>
    
    <target name="test">
        <mkdir dir="${reports.dir}"/>

        <junit haltonfailure="yes" includeantruntime="true" logfailedtests="true" showoutput="true" printsummary="true">
            <classpath refid="project.classpath" />
            
            <formatter type="plain"/>
            <formatter type="xml"/>
        
            <batchtest fork="false" todir="${reports.dir}">
                <fileset dir="${src.test}">
                    <include name="**/*Test*.java"/>
                </fileset>
            </batchtest>
        </junit>
    </target>

    <target name="clean" description="Clean project.">
        <delete dir="${build.dir}"/>
        <delete dir="${reports.dir}"/>
    </target>

    <target name="rebuild" depends="clean, compile" description="Clean and build project."/>
</project>
